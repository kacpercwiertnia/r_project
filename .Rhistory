getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
print(class(c(point)))
#value <- optim(par = c(point), fn = f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
#if(value < min_value){
#min_value <- value
#}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(par = c(point), fn = f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(par = c(0,0), fn = f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
print(class(value))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
print(class(value))
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
print(value)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))['value']
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"]
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
if(value["value"] < min_value){
min_value <- value["value"]
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
print(value["value"])
if(value["value"] < min_value){
min_value <- value["value"]
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))
if(value["value"] < min_value){
min_value <- value["value"]
}
}
print(min_value)
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
print(min_value)
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
getLowerBoxConstraints(f)
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50,prs_algorithm(makeAlpine01Function, 2, 50)))
ms_mean <- mean(replicate(50,ms_algorithm(makeAlpine01Function, 2, 50)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50, prs_algorithm(makeAlpine01Function, 2, 1000)))
ms_mean <- mean(replicate(50, ms_algorithm(makeAlpine01Function, 2, 1000)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50, prs_algorithm(makeAlpine01Function, 2, 1000)))
ms_mean <- mean(replicate(50, ms_algorithm(makeAlpine01Function, 2, 1000)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50, prs_algorithm(makeAlpine01Function, 2, 1000)))
ms_mean <- mean(replicate(50, ms_algorithm(makeAlpine01Function, 2, 1000)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50, prs_algorithm(makeAlpine01Function, 2, 1000)))
ms_mean <- mean(replicate(50, ms_algorithm(makeAlpine01Function, 2, 1000)))
prs_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- f(point)
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
ms_algorithm <- function(fun, dim, num_of_points){
f <- fun(dim);
min_value <- Inf
for(x in num_of_points){
point <- runif(dim, getLowerBoxConstraints(f), getUpperBoxConstraints(f))
value <- as.numeric(optim(point, f, method = "L-BFGS-B", lower = getLowerBoxConstraints(f), upper = getUpperBoxConstraints(f))["value"])
if(value < min_value){
min_value <- value
}
}
return(min_value)
}
prs_mean <- mean(replicate(50, prs_algorithm(makeAlpine01Function, 2, 1000)))
ms_mean <- mean(replicate(50, ms_algorithm(makeAlpine01Function, 2, 1000)))
